{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/global.js","../../src/synth.js","../../src/guide.js","../../src/objectDetector.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.30.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export let inputVideoSize = {\r\n    width: 640,\r\n    height: 480\r\n};","export class Synth\r\n{\r\n    constructor()\r\n    {\r\n        this.audioContext = new AudioContext();\r\n\r\n        this.panner = this.audioContext.createStereoPanner();\r\n        this.gain = this.audioContext.createGain();\r\n        this.masterGain = this.audioContext.createGain();\r\n\r\n        this.panner.connect(this.gain);\r\n        this.gain.connect(this.masterGain);\r\n        this.masterGain.connect(this.audioContext.destination);\r\n        this.masterGain.gain.value = 0.5;\r\n\r\n        this.gain.gain.value = 0.5;\r\n\r\n\r\n        this.playing = false;\r\n    }\r\n\r\n    start()\r\n    {\r\n        this.oscillator = this.audioContext.createOscillator();\r\n        this.oscillator.connect(this.panner);\r\n        this.oscillator.type = \"sawtooth\";\r\n        this.oscillator.frequency.value = 440;\r\n\r\n        this.beepGain = this.audioContext.createGain();\r\n        this.beepGain.gain.value = 0.5;\r\n        this.beepOscillator = this.audioContext.createOscillator();\r\n        this.beepOscillator.connect(this.beepGain);\r\n        this.beepOscillator.frequency.value = 3;\r\n        this.beepOscillator.type = \"square\";\r\n        this.beepGain.connect(this.gain.gain);\r\n        \r\n        this.oscillator.start();\r\n        this.beepOscillator.start();\r\n        this.playing = true;\r\n    }\r\n\r\n    stop()\r\n    {\r\n        this.oscillator.stop();\r\n        this.beepOscillator.stop();\r\n\r\n        this.playing = false;\r\n    }\r\n\r\n    setFrequency(f)\r\n    {\r\n        if (this.oscillator)\r\n        {\r\n            this.oscillator.frequency.value = f;\r\n        }\r\n    }\r\n\r\n    setPan(p)\r\n    {\r\n        this.panner.pan.value = p;\r\n    }\r\n\r\n    setBeepingFrequency(f)\r\n    {\r\n        if (this.beepOscillator)\r\n        {\r\n            this.beepOscillator.frequency.value = f;\r\n        }\r\n    }\r\n\r\n    setMasterGain(g)\r\n    {\r\n        this.masterGain.gain.value = g;\r\n    }\r\n}","import { inputVideoSize } from \"./global\";\r\nimport { Synth } from \"./synth\";\r\n\r\nexport class Guide\r\n{\r\n    constructor()\r\n    {\r\n        this.state = -1;\r\n\r\n        this.status = \"Click on play\";\r\n\r\n        this.targetDoorCenterX = inputVideoSize.width / 2;\r\n        this.targetDoorCenterY = inputVideoSize.height / 2;\r\n        this.targetDoorHeight = inputVideoSize.height * 0.9;\r\n\r\n        this.targetHandleCenterX = inputVideoSize.width / 2;\r\n        this.targetHandleCenterY = inputVideoSize.height / 2;\r\n        this.targetHandleArea = inputVideoSize.width * inputVideoSize.height * 0.4;\r\n\r\n        this.DOOR_LABEL = 1; // person\r\n        this.HANDLE_LABEL = 77; // cell phone\r\n\r\n        this.currentDoor = null;\r\n        this.currentHandle = null;\r\n\r\n        this.synth = new Synth();\r\n        this.speechSynthesis = window.speechSynthesis;\r\n        this.speechSynthesis.addEventListener(\"voiceschanged\", () => {\r\n            // get google english voice\r\n            const voices = this.speechSynthesis.getVoices();\r\n            this.voice = voices[0];\r\n            for (let voice of voices)\r\n            {\r\n                if (voice.lang == \"en-US\")\r\n                {\r\n                    this.voice = voice;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    speak(str)\r\n    {\r\n        let utterance = new SpeechSynthesisUtterance(str);\r\n        utterance.voice = this.voice;\r\n        speechSynthesis.speak(utterance);\r\n    }\r\n\r\n    setState(state)\r\n    {\r\n        console.log(\"Setting state \" + state)\r\n        if (state == this.state)\r\n        {\r\n            return;\r\n        }\r\n\r\n        this.speechSynthesis.pause();\r\n        this.speechSynthesis.cancel();\r\n\r\n        this.state = state;\r\n\r\n        switch (state)\r\n        {\r\n            case 0:\r\n                this.status = \"Looking for door\";\r\n                this.speak(\"Please look around to find a door\");\r\n            break;\r\n\r\n            case 1:\r\n                this.status = \"Door found !\";\r\n                this.speak(\"I found a door ! I'll guide you with the beeps\");\r\n            break;\r\n\r\n            case 2:\r\n                this.status = \"Handle found !\";\r\n                this.speak(\"I found the handle ! Now I'll guide you to it\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    update(objects)\r\n    {\r\n        if (this.speechSynthesis.speaking)\r\n        {\r\n            this.synth.setMasterGain(0.1);\r\n        }\r\n        else\r\n        {\r\n            this.synth.setMasterGain(0.8);\r\n        }\r\n\r\n        this.currentDoor = this.lookForDoor(objects);\r\n\r\n        if (this.state == 0) // Looking for door\r\n        {\r\n            if (this.currentDoor)\r\n            {\r\n                this.setState(1);\r\n                this.synth.start();\r\n            }\r\n        }\r\n        else if (this.state == 1) // Going towards door until handle found\r\n        {\r\n            this.currentHandle = this.lookForHandle(objects);\r\n            if (this.currentHandle)\r\n            {\r\n                this.setState(2);\r\n            }\r\n            else if (this.currentDoor)\r\n            {\r\n                this.guideTowardsDoor();\r\n            }\r\n            else\r\n            {\r\n                this.setState(0);\r\n                this.synth.stop();\r\n            }\r\n        }\r\n        else if (this.state == 2) // Going towards handle\r\n        {\r\n            this.currentHandle = this.lookForHandle(objects);\r\n            if (this.currentHandle)\r\n            {\r\n                this.guideTowardsHandle();\r\n            }\r\n            else\r\n            {\r\n                this.setState(1);\r\n            }\r\n        }\r\n    }\r\n\r\n    lookForDoor(objects)\r\n    {\r\n        return this.lookForObject(objects, this.DOOR_LABEL)\r\n    }\r\n\r\n    lookForHandle(objects)\r\n    {\r\n        return this.lookForObject(objects, this.HANDLE_LABEL);\r\n    }\r\n\r\n    lookForObject(objects, label)\r\n    {\r\n        let doors = objects.filter((obj) => obj.label == label);\r\n\r\n        if (doors.length <= 0)\r\n        {\r\n            return null;\r\n        }\r\n        \r\n        let maxConfidenceDoor = doors[0];\r\n        let maxConfidence = maxConfidenceDoor.confidence;\r\n\r\n        for (let d of doors)\r\n        {\r\n            if (d.confidence > maxConfidence)\r\n            {\r\n                maxConfidence = d.confidence;\r\n                maxConfidenceDoor = d;\r\n            }\r\n        }\r\n\r\n        return maxConfidenceDoor;\r\n    }\r\n\r\n    guideTowardsDoor()\r\n    {\r\n        let requestedMoveX = this.targetDoorCenterX - this.currentDoor.centerX;\r\n        let requestedMoveY = this.targetDoorCenterY - this.currentDoor.centerY;\r\n\r\n        let distanceEstimation = this.currentDoor.height / this.targetDoorHeight;\r\n        this.synth.setBeepingFrequency(distanceEstimation * 5);\r\n\r\n        let normalizedMoveY = requestedMoveY / (inputVideoSize.height / 2); // [-1 ; 1]\r\n        let freq = 440 + Math.round(normalizedMoveY) * 220;\r\n        this.synth.setFrequency(freq);\r\n\r\n        let pan = requestedMoveX / inputVideoSize.width * -1;\r\n        this.synth.setPan(Math.pow(Math.abs(pan), 0.2) * Math.sign(pan));\r\n\r\n        this.status = `\r\n            Door center at (${this.currentDoor.centerX.toFixed(3)};${this.currentDoor.centerY.toFixed(3)})\r\n            Move requested (${requestedMoveX.toFixed(3)};${requestedMoveY.toFixed(3)})\r\n            Door height (${this.currentDoor.height.toFixed(3)})\r\n            Door distance target (${distanceEstimation.toFixed(3)})\r\n        `;\r\n    }\r\n\r\n    guideTowardsHandle()\r\n    {\r\n        let requestedMoveX = this.targetHandleCenterX - this.currentHandle.centerX;\r\n        let requestedMoveY = this.targetHandleCenterY - this.currentHandle.centerY;\r\n\r\n        let distanceEstimation = this.currentHandle.area / this.targetHandleArea;\r\n        this.synth.setBeepingFrequency(distanceEstimation * 5);\r\n\r\n        let normalizedMoveY = requestedMoveY / (inputVideoSize.height / 2); // [-1 ; 1]\r\n        let freq = 440 + Math.round(normalizedMoveY) * 220;\r\n        this.synth.setFrequency(freq);\r\n\r\n        let pan = requestedMoveX / inputVideoSize.width * -1;\r\n        this.synth.setPan(Math.pow(Math.abs(pan), 0.2) * Math.sign(pan));\r\n\r\n        this.status = `\r\n            Handle center at (${this.currentHandle.centerX.toFixed(3)};${this.currentHandle.centerY.toFixed(3)})\r\n            Move requested (${requestedMoveX.toFixed(3)};${requestedMoveY.toFixed(3)})\r\n            Handle area (${this.currentHandle.height.toFixed(3)})\r\n            Handle distance target (${distanceEstimation.toFixed(3)})\r\n        `;\r\n    }\r\n}","import { inputVideoSize } from \"./global\";\r\n\r\nexport class ObjectDetectorDetection\r\n{\r\n    constructor(label, confidence, xmin, xmax, ymin, ymax)\r\n    {\r\n        this.label = label;\r\n        this.confidence = confidence;\r\n\r\n        this.x = xmin * inputVideoSize.width;\r\n        this.xMax = xmax * inputVideoSize.width;\r\n        this.y = ymin * inputVideoSize.height;\r\n        this.yMax = ymax * inputVideoSize.height;\r\n\r\n        this.width = this.xMax - this.x;\r\n        this.height = this.yMax - this.y;\r\n\r\n        this.centerX = this.x + this.width / 2;\r\n        this.centerY = this.y + this.height / 2;\r\n\r\n        this.area = this.width * this.height;\r\n    }\r\n}\r\n\r\nexport class ObjectDetector\r\n{\r\n    constructor(options)\r\n    {\r\n        this.model = null;\r\n\r\n        this.options = options || {\r\n            N_CLASS: 4,\r\n            MIN_SCORE: 0.2,\r\n            MAX_DRAW_BOX: 20\r\n        };\r\n    }\r\n\r\n    async loadModel()\r\n    {\r\n        this.model = await tf.loadGraphModel(\"./web_model/model.json\");\r\n\r\n        console.log(\"[Object detector] model loaded\");\r\n    }\r\n\r\n    async detect(img)\r\n    {\r\n        tf.engine().startScope();\r\n\r\n        let tensorImg = tf.browser.fromPixels(img).resizeNearestNeighbor([320,320]).expandDims();\r\n        \r\n        // console.time(\"prediction\")\r\n        let prediction = await this.model.executeAsync(tensorImg);\r\n        // console.timeEnd(\"prediction\")\r\n\r\n        let indexBoxes   = this.model.outputNodes.indexOf(\"Identity_1:0\");\r\n\t\tlet indexClasses = this.model.outputNodes.indexOf(\"Identity_2:0\");\r\n\t\tlet indexScores  = this.model.outputNodes.indexOf(\"Identity_4:0\");\r\n\t\t// let indexCount   = this.model.outputNodes.indexOf(\"Identity_5:0\");\r\n\t\t\r\n\t\tlet boxesPromise   = prediction[indexBoxes].array().then(n=>n[0]);\r\n\t\tlet classesPromise = prediction[indexClasses].array().then(n=>n[0]);\r\n\t\tlet scoresPromise  = prediction[indexScores].array().then(n=>n[0]);\r\n        // let count   = prediction[indexCount].data().then(n=>n[0]);\r\n        \r\n        let [boxes, classes, scores] = await Promise.all([boxesPromise, classesPromise, scoresPromise]);\r\n\r\n        let boundingBoxes = [];\r\n        for (let i = 0, j = 0; j < boxes.length; j++) // Here, we choose which boxes are kept\r\n        {\r\n            let c = classes[j];\r\n            if (c == 0 || c > this.options.N_CLASSES)\r\n                continue;\r\n            \r\n            let s = scores[j];\r\n            if (s < this.options.MIN_SCORE)\r\n                break;\r\n\r\n            let b = boxes[j];\r\n            boundingBoxes.push(new ObjectDetectorDetection(c, s, b[1], b[3], b[0], b[2]));\r\n            \r\n            if (++i >= this.options.MAX_DRAW_BOX)\r\n                break;\r\n        }\r\n\r\n        tf.engine().endScope();\r\n\r\n        return boundingBoxes;\r\n    }\r\n}","<script>\n\n    import { onMount } from \"svelte\";\n    import { Guide } from \"./guide\";\n    import { ObjectDetector } from \"./objectDetector\";\n    import { inputVideoSize } from \"./global\";\n\n\n    const constraints = {\n        video: {\n            facingMode: \"environment\"\n        }\n    };\n\n    let video = null;\n    let frameCanvas = null;\n    let frameContext = null;\n\n    let objectDetector = new ObjectDetector({\n        N_CLASS: 4,\n        MIN_SCORE: 0.4,\n        MAX_DRAW_BOX: 20\n    });\n    console.log(objectDetector);\n\n    let guide = new Guide();\n\n    let videoInputName = \"\";\n\n    onMount(async () => {\n        frameContext = frameCanvas.getContext(\"2d\");\n\n        navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n            video.srcObject = stream;\n            videoInputName = stream.getVideoTracks()[0].label;\n        });\n\n        await objectDetector.loadModel();\n    });\n\n    function draw(objects)\n    {\n        frameContext.clearRect(0, 0, inputVideoSize.width, inputVideoSize.height);\n\n        frameContext.strokeStyle = \"red\";\n        frameContext.strokeWidth = 3;\n        frameContext.font = `20px \"Segoe UI\"`;\n        \n        for (let obj of objects)\n        {\n            frameContext.strokeRect(obj.x, obj.y, obj.width, obj.height);\n            frameContext.fillText(obj.label + \" (\" + obj.confidence + \")\", obj.x, obj.y - 10);\n            // frameContext.fillText(r.relativeErrorX + \" \" + r.relativeErrorY + \" \" + r.errorArea, obj.x, r.screenTarget.y - 30);\n            \n            frameContext.beginPath();\n            frameContext.arc(obj.centerX, obj.centerY, 20, 0, 2*Math.PI);\n            frameContext.fill();\n        }\n    }\n\n    let guideStatus = \"Click on play\";\n\n    async function tick()\n    {\n        if (!isGuiding)\n        {\n            return;\n        }\n\n        let objects = await objectDetector.detect(video);\n        // console.log(objects);\n        draw(objects);\n\n        guide.update(objects);\n        guideStatus = guide.status;\n\n        requestAnimationFrame(tick);\n    }\n\n    let isGuiding = false;\n\n    function startTracking()\n    {\n        if (!isGuiding)\n        {\n            isGuiding = true;\n\n            inputVideoSize.width = video.videoWidth;\n            inputVideoSize.height = video.videoHeight;\n            \n            frameCanvas.width = video.videoWidth;\n            frameCanvas.height = video.videoHeight;\n            frameCanvas.style.width = video.videoWidth + \"px\";\n            frameCanvas.style.height = video.videoHeight + \"px\";\n            \n            guide.setState(0);\n\n            tick();\n        }\n        else\n        {\n            isGuiding = false;\n        }\n    }\n\n\n</script>\n\n<div id=\"wrapper\">\n    <main>\n        <h1>TrainGuide proof of concept</h1>\n\n        <section>\n            <h2>Video input : {videoInputName}</h2>\n\n            <!-- svelte-ignore a11y-media-has-caption -->\n            <div id=\"video-container\" style=\"height: {Math.max(200, inputVideoSize.height)}px\">\n                <video autoplay bind:this={video} id=\"input-video\"></video>\n\n                <canvas bind:this={frameCanvas} id=\"objects-canvas\"></canvas>\n            </div>\n\n            <button on:click={startTracking}>{isGuiding ? \"Stop guidance\" : \"Guide me\"}</button>\n\n            <p>{guideStatus}</p>\n        </section>\n    </main>\n</div>\n\n<style>\n\n    #wrapper {\n        background-image: url(\"https://cdn.unitycms.io/image/ocroped/1200,1200,1000,1000,0,0/gHSTrbFT19Y/1JBvM-VEqHw8LU5fQUAjfy.jpg\");\n        background-position: center;\n        background-size: cover;\n\n        padding: 1em;\n        box-sizing: border-box;\n\n        width: 100vw;\n        height: 100vh;\n    }\n\n    main {\n        padding: 2em;\n        margin: auto;\n        max-width: 1000px;\n        \n        background-color: #fafafa;\n        border-radius: 2em;\n        box-shadow: -15px -15px 15px rgba(255, 255, 255, 0.4), 15px 15px 15px rgba(0, 0, 0, 0.4);\n    }\n\n    h1 {\n        text-align: center;\n    }\n\n    #video-container {\n        position: relative;\n    }\n\n    #input-video, #objects-canvas {\n        position: absolute;\n        max-width: 100%;\n        height: auto;\n        top: 0;\n        left: 0;\n    }\n\n    #objects-canvas {\n        z-index: 10;\n    }\n\n    button {\n        display: block;\n        margin: 1em auto;\n        width: 10em;\n        border: 2px solid red;\n    }\n\n    p {\n        font-size: 2em;\n    }\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","on_destroy","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","anchor","m","new_on_destroy","map","filter","mount_component","inputVideoSize","width","height","Synth","[object Object]","this","audioContext","AudioContext","panner","createStereoPanner","gain","createGain","masterGain","connect","destination","playing","oscillator","createOscillator","type","frequency","beepGain","beepOscillator","start","stop","f","pan","g","Guide","state","status","targetDoorCenterX","targetDoorCenterY","targetDoorHeight","targetHandleCenterX","targetHandleCenterY","targetHandleArea","DOOR_LABEL","HANDLE_LABEL","currentDoor","currentHandle","synth","speechSynthesis","window","addEventListener","voices","getVoices","voice","lang","str","utterance","SpeechSynthesisUtterance","speak","console","log","pause","cancel","objects","speaking","setMasterGain","lookForDoor","setState","lookForHandle","guideTowardsDoor","guideTowardsHandle","lookForObject","label","doors","obj","maxConfidenceDoor","maxConfidence","confidence","d","requestedMoveX","centerX","requestedMoveY","centerY","distanceEstimation","setBeepingFrequency","normalizedMoveY","freq","Math","round","setFrequency","setPan","pow","abs","sign","toFixed","area","ObjectDetectorDetection","xmin","xmax","ymin","ymax","x","xMax","y","yMax","ObjectDetector","model","N_CLASS","MIN_SCORE","MAX_DRAW_BOX","tf","loadGraphModel","img","engine","startScope","tensorImg","browser","fromPixels","resizeNearestNeighbor","expandDims","prediction","executeAsync","indexBoxes","outputNodes","indexOf","indexClasses","indexScores","boxesPromise","array","n","classesPromise","scoresPromise","boxes","classes","scores","all","boundingBoxes","j","N_CLASSES","s","endScope","max","event","handler","insertBefore","removeEventListener","constraints","video","facingMode","frameCanvas","frameContext","objectDetector","guide","videoInputName","getContext","navigator","mediaDevices","getUserMedia","stream","srcObject","getVideoTracks","loadModel","guideStatus","tick","isGuiding","detect","clearRect","strokeStyle","strokeWidth","font","strokeRect","fillText","beginPath","arc","PI","draw","requestAnimationFrame","videoWidth","videoHeight","detaching","destroy_component","$destroy","index","splice","$$props","$$set","keys","body"],"mappings":"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"}